---
description: 
globs: 
alwaysApply: true
---
2. 项目处于windows系统，执行命令时注意命令格式准确
3. 项目分为前端和后端两部分，其中前端位于front-end-pages文件夹，后端位于back-end-pages文件夹，编写代码时注意不要写错位置
4. 前端框架使用Next.js + TypeScript + Ant Design UI
5. 当前项目后端使用的rag-agent（Python），注意执行python命令时要环境准确
7. 对于AI的chat api采用流式响应，且要兼容OpenAI标准API格式
12.我本地安装了ollama，ollama version is 0.9.3,我希望你直接调用ollamaAPI而不是本地加载模型，嵌入模型使用：modelscope.cn/Qwen/Qwen3-Embedding-8B-GGUF:latest  对话模型使用：deepseek-r1:latest
9. 文本重排序模型使用的是deepseek-r1:latest
14. 项目依赖文件有且只能有一个requirements.txt（已整合所有依赖）
16. 支持多后端：ModelScope主后端，Sentence-Transformers备用后端
17. 每次修改代码完成之后不需要自动重启，需要重启通知我即可。
## 编码指南

### 1. Pythonic实践
- **优雅可读**: 追求优雅的Pythonic代码，易于理解和维护
- **PEP 8合规**: 遵循PEP 8指南，使用Ruff作为主要linter和格式化器
- **显式优于隐式**: 偏好清晰表达意图的显式代码
- **Python之禅**: 在做设计决策时牢记Python之禅

### 2. 模块化设计
- **单一职责原则**: 每个模块/文件应有明确定义的单一职责
- **可重用组件**: 开发可重用的函数和类，偏好组合而非继承
- **包结构**: 将代码组织成逻辑包和模块

### 3. 代码质量标准
- **全面类型注解**: 所有函数、方法、类成员必须有类型注解
- **详细文档字符串**: 所有函数、方法、类必须有Google风格文档字符串
- **彻底单元测试**: 目标测试覆盖率90%或更高，使用pytest
- **健壮异常处理**: 使用特定异常类型，提供信息丰富的错误消息


- **日志记录**: 明智使用logging模块记录重要事件、警告和错误